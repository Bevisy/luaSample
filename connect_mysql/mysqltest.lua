---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by z15085.
--- DateTime: 2019/9/5 20:16
---
local config = require "conf_constant"

local mysqlUtil = require "mysql_factory"

--接受前端数据的对象
local args = nil

--获取前端的请求方式，并获取传递的参数
local request_method = ngx.var.request_method
--判断是 get 请求，还是 post 请求，并分别拿出相应的数据
if "GET" == request_method then
    args = ngx.req.get_uri_args()
elseif "POST" == request_method then
    ngx.req.read_body()
    args = ngx.req.get_post_args()
    --兼容请求使用 post 请求，但是传参以 get 方式造成的无法获取数据的bug
    if (args == nil or args.data == null) then
        args = ngx.req.get_uri_args()
    end
end

--前端传递的id
local id = args.id

--组装sql语句
local sql = "select * from test_table where id = " .. id

--执行sql语句
local ret, res, sqlstate = mysqlUtil:query(sql, config)

--ngx.log(ngx.DEBUG, "ret--", ret)
--ngx.log(ngx.DEBUG, "sqlstate--", sqlstate)

--判断查询结果
if (ret and res ~= nil and #res > 0) then
    --取出最新的值
    local user = res[1]
    --组装响应参数
    local reVa = "id:" .. user.id .. ";</br>name:" .. user.name .. ";</br>age:" .. user.age
    --响应前端
    ngx.say(reVa)
else
    ngx.say("This user isn't existed!")
end