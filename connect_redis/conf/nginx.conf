
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/debug.log debug;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    upstream apache.org {
        server apache.org;
    }

    upstream nginx.org {
        server nginx.org;
    }

    server {
        listen       80;
        server_name  localhost;

        location = /redis {
            internal;
            set_unescape_uri $key $arg_key;
            redis2_query get $key;
            redis2_pass 10.125.30.168:6379;
        }

        location /health {
            default_type text/html;
            content_by_lua_block {
                ngx.say("ok");
            }
        }

        location / {
            set $target '';
            access_by_lua '
                local key = ngx.var.http_user_agent
                local res = ngx.location.capture(
                    "/redis", { args = { key = key } }
                )

                print("key:", key)

                if res.status ~= 200 then
                    ngx.log(ngx.ERR, "redis server returned bad status: ", res.status)
                    ngx.exit(res.status)
                end

                if not res.body then
                    ngx.log(ngx.ERR, "redis returned empty body")
                    ngx.exit(500)
                end

                loca parser = require "redis.parser"
                lcoal server, typ = parser.parse_reply(resp.body)
                if typ ~= parser.BULK_REPLY or not server then
                    ngx.log(ngx.ERR, "bad redis respones: ", resp.body)
                    ngx.exit(500)
                end

                print("server: ", server)

                ngx.var.target = server
             ';

             proxy_pass http://$target;
        }
    }
}
